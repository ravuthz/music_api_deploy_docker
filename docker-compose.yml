version: '3'

services:

  # database containers, one for each db
  database1:
    image: postgres:10
    volumes:
      - database1_volume:/var/lib/postgresql/data
    env_file:
      - config/db/database1_env
    networks:
      - database1_network

  database2:
    image: postgres:10
    volumes:
      - database2_volume:/var/lib/postgresql/data
    env_file:
      - config/db/database2_env
    networks:
      - database2_network

  # web container, with django + gunicorn
  app:
    build: .
    environment:
      - DJANGO_SETTINGS_MODULE
    env_file:
      - .env
    volumes:
      # - ./config/gunicorn/conf.py:/opt/apps/music_api/config/gunicorn/conf.py
      - ./config/gunicorn/conf.py:/etc/gunicorn/conf.py
      - ./music_api:/opt/apps/music_api
      - ./music_api/media:/opt/apps/music_api/media
      - ./music_api/static:/opt/apps/music_api/static
    networks:
      - database1_network
      - database2_network
      - nginx_network
    depends_on:
      - database1
      - database2

  # reverse proxy container (nginx)
  nginx:
    image: nginx:1.13
    ports:
      - 8000:80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./music_api/media:/opt/apps/music_api/media
      - ./music_api/static:/opt/apps/music_api/static
    networks:
      - nginx_network
    depends_on:
      - app

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "ravuthz@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "Pg@dmin2019!"
    ports:
      - "9000:80"
    depends_on:
      - database1
      - database2
    networks:
      - database1_network
      - database2_network
      - nginx_network

networks:
  database1_network:
    driver: bridge
  database2_network:
    driver: bridge
  nginx_network:
    driver: bridge

volumes:
  database1_volume:
  database2_volume:
  media:
  static: